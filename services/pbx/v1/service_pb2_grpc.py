# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from services.pbx.v1 import service_pb2 as services_dot_pbx_dot_v1_dot_service__pb2


class PBXServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.QueryPbxUsers = channel.unary_unary(
                '/services.pbx.v1.PBXService/QueryPbxUsers',
                request_serializer=services_dot_pbx_dot_v1_dot_service__pb2.QueryPbxUsersRequest.SerializeToString,
                response_deserializer=services_dot_pbx_dot_v1_dot_service__pb2.QueryPbxUsersResponse.FromString,
                )
        self.QueryRingGroups = channel.unary_unary(
                '/services.pbx.v1.PBXService/QueryRingGroups',
                request_serializer=services_dot_pbx_dot_v1_dot_service__pb2.QueryRingGroupsRequest.SerializeToString,
                response_deserializer=services_dot_pbx_dot_v1_dot_service__pb2.QueryRingGroupsResponse.FromString,
                )
        self.UpdatePbxUser = channel.unary_unary(
                '/services.pbx.v1.PBXService/UpdatePbxUser',
                request_serializer=services_dot_pbx_dot_v1_dot_service__pb2.UpdatePbxUserRequest.SerializeToString,
                response_deserializer=services_dot_pbx_dot_v1_dot_service__pb2.UpdatePbxUserResponse.FromString,
                )
        self.UpdateRingGroup = channel.unary_unary(
                '/services.pbx.v1.PBXService/UpdateRingGroup',
                request_serializer=services_dot_pbx_dot_v1_dot_service__pb2.UpdateRingGroupRequest.SerializeToString,
                response_deserializer=services_dot_pbx_dot_v1_dot_service__pb2.UpdateRingGroupResponse.FromString,
                )
        self.CreateRingGroup = channel.unary_unary(
                '/services.pbx.v1.PBXService/CreateRingGroup',
                request_serializer=services_dot_pbx_dot_v1_dot_service__pb2.CreateRingGroupRequest.SerializeToString,
                response_deserializer=services_dot_pbx_dot_v1_dot_service__pb2.CreateRingGroupResponse.FromString,
                )
        self.DeleteRingGroup = channel.unary_unary(
                '/services.pbx.v1.PBXService/DeleteRingGroup',
                request_serializer=services_dot_pbx_dot_v1_dot_service__pb2.DeleteRingGroupRequest.SerializeToString,
                response_deserializer=services_dot_pbx_dot_v1_dot_service__pb2.DeleteRingGroupResponse.FromString,
                )
        self.AssignRandomExtension = channel.unary_unary(
                '/services.pbx.v1.PBXService/AssignRandomExtension',
                request_serializer=services_dot_pbx_dot_v1_dot_service__pb2.AssignRandomExtensionRequest.SerializeToString,
                response_deserializer=services_dot_pbx_dot_v1_dot_service__pb2.AssignRandomExtensionResponse.FromString,
                )


class PBXServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def QueryPbxUsers(self, request, context):
        """Queries details of PBX Users based on specified criteria for the authenticated callers ORG
        Required permissions:
        PBX-MANAGER
        Errors:
        - grpc.PermissionDenied: Caller doesn't have the required permissions.
        - grpc.Internal: An internal error occurred.
        - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryRingGroups(self, request, context):
        """Queries details of Ring Groups based on specified criteria for the authenticated callers ORG
        Required permissions:
        PBX-MANAGER
        Errors:
        - grpc.PermissionDenied: Caller doesn't have the required permissions.
        - grpc.Internal: An internal error occurred.
        - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePbxUser(self, request, context):
        """Updates details of a PBX User for the authenticated callers ORG.
        Allows for updating, activating, and deactivating a user.
        Required permissions:
        PBX-MANAGER
        Errors:
        - grpc.PermissionDenied: Caller doesn't have the required permissions.
        - grpc.Internal: An internal error occurred.
        - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRingGroup(self, request, context):
        """Updates details of a Ring Group for the authenticated callers ORG. This operation acts as an "upsert".
        - If the groupID is in the update mask and the group exists, the group will be updated.
        - If the groupID is not in the update mask a group will be created.
        Allows for creating and updating a ring group.
        Required permissions:
        PBX-MANAGER
        Errors:
        - grpc.InvalidArgument: The request is invalid.
        - grpc.PermissionDenied: Caller doesn't have the required permissions.
        - grpc.Internal: An internal error occurred.
        - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRingGroup(self, request, context):
        """Creates a ring group for the authenticated caller's ORG.
        Required permissions:
        PBX-MANAGER
        Errors:
        - grpc.InvalidArgument: The request is invalid.
        - grpc.PermissionDenied: Caller doesn't have the required permissions.
        - grpc.Internal: An internal error occurred.
        - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRingGroup(self, request, context):
        """Deletes a specific Ring Group for the authenticated caller's ORG.
        Required permissions:
        PBX-MANAGER
        Errors:
        - grpc.InvalidArgument: The groupID is an invalid format.
        - grpc.NotFound: The group does not exist or is not in the caller's ORG.
        - grpc.PermissionDenied: Caller doesn't have the required permissions.
        - grpc.Internal: An internal error occurred.
        - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssignRandomExtension(self, request, context):
        """Assigns a random extension either to a PBX user or a Ring Group
        Required permissions:
        PBX-MANAGER
        Errors:
        - grpc.PermissionDenied: Caller doesn't have the required permissions.
        - grpc.Internal: An internal error occurred.
        - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PBXServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'QueryPbxUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryPbxUsers,
                    request_deserializer=services_dot_pbx_dot_v1_dot_service__pb2.QueryPbxUsersRequest.FromString,
                    response_serializer=services_dot_pbx_dot_v1_dot_service__pb2.QueryPbxUsersResponse.SerializeToString,
            ),
            'QueryRingGroups': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryRingGroups,
                    request_deserializer=services_dot_pbx_dot_v1_dot_service__pb2.QueryRingGroupsRequest.FromString,
                    response_serializer=services_dot_pbx_dot_v1_dot_service__pb2.QueryRingGroupsResponse.SerializeToString,
            ),
            'UpdatePbxUser': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePbxUser,
                    request_deserializer=services_dot_pbx_dot_v1_dot_service__pb2.UpdatePbxUserRequest.FromString,
                    response_serializer=services_dot_pbx_dot_v1_dot_service__pb2.UpdatePbxUserResponse.SerializeToString,
            ),
            'UpdateRingGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRingGroup,
                    request_deserializer=services_dot_pbx_dot_v1_dot_service__pb2.UpdateRingGroupRequest.FromString,
                    response_serializer=services_dot_pbx_dot_v1_dot_service__pb2.UpdateRingGroupResponse.SerializeToString,
            ),
            'CreateRingGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRingGroup,
                    request_deserializer=services_dot_pbx_dot_v1_dot_service__pb2.CreateRingGroupRequest.FromString,
                    response_serializer=services_dot_pbx_dot_v1_dot_service__pb2.CreateRingGroupResponse.SerializeToString,
            ),
            'DeleteRingGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRingGroup,
                    request_deserializer=services_dot_pbx_dot_v1_dot_service__pb2.DeleteRingGroupRequest.FromString,
                    response_serializer=services_dot_pbx_dot_v1_dot_service__pb2.DeleteRingGroupResponse.SerializeToString,
            ),
            'AssignRandomExtension': grpc.unary_unary_rpc_method_handler(
                    servicer.AssignRandomExtension,
                    request_deserializer=services_dot_pbx_dot_v1_dot_service__pb2.AssignRandomExtensionRequest.FromString,
                    response_serializer=services_dot_pbx_dot_v1_dot_service__pb2.AssignRandomExtensionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'services.pbx.v1.PBXService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PBXService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def QueryPbxUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/services.pbx.v1.PBXService/QueryPbxUsers',
            services_dot_pbx_dot_v1_dot_service__pb2.QueryPbxUsersRequest.SerializeToString,
            services_dot_pbx_dot_v1_dot_service__pb2.QueryPbxUsersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryRingGroups(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/services.pbx.v1.PBXService/QueryRingGroups',
            services_dot_pbx_dot_v1_dot_service__pb2.QueryRingGroupsRequest.SerializeToString,
            services_dot_pbx_dot_v1_dot_service__pb2.QueryRingGroupsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePbxUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/services.pbx.v1.PBXService/UpdatePbxUser',
            services_dot_pbx_dot_v1_dot_service__pb2.UpdatePbxUserRequest.SerializeToString,
            services_dot_pbx_dot_v1_dot_service__pb2.UpdatePbxUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateRingGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/services.pbx.v1.PBXService/UpdateRingGroup',
            services_dot_pbx_dot_v1_dot_service__pb2.UpdateRingGroupRequest.SerializeToString,
            services_dot_pbx_dot_v1_dot_service__pb2.UpdateRingGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateRingGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/services.pbx.v1.PBXService/CreateRingGroup',
            services_dot_pbx_dot_v1_dot_service__pb2.CreateRingGroupRequest.SerializeToString,
            services_dot_pbx_dot_v1_dot_service__pb2.CreateRingGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRingGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/services.pbx.v1.PBXService/DeleteRingGroup',
            services_dot_pbx_dot_v1_dot_service__pb2.DeleteRingGroupRequest.SerializeToString,
            services_dot_pbx_dot_v1_dot_service__pb2.DeleteRingGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssignRandomExtension(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/services.pbx.v1.PBXService/AssignRandomExtension',
            services_dot_pbx_dot_v1_dot_service__pb2.AssignRandomExtensionRequest.SerializeToString,
            services_dot_pbx_dot_v1_dot_service__pb2.AssignRandomExtensionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
