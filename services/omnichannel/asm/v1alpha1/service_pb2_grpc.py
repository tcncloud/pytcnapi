# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from services.omnichannel.asm.v1alpha1 import entities_pb2 as services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2


class AsmServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateSession = channel.unary_unary(
                '/services.omnichannel.asm.v1alpha1.AsmService/CreateSession',
                request_serializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.CreateSessionRequest.SerializeToString,
                response_deserializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.CreateSessionResponse.FromString,
                )
        self.EndSession = channel.unary_unary(
                '/services.omnichannel.asm.v1alpha1.AsmService/EndSession',
                request_serializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.EndSessionRequest.SerializeToString,
                response_deserializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.EndSessionResponse.FromString,
                )
        self.GetCurrentSession = channel.unary_unary(
                '/services.omnichannel.asm.v1alpha1.AsmService/GetCurrentSession',
                request_serializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.GetCurrentSessionRequest.SerializeToString,
                response_deserializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.GetCurrentSessionResponse.FromString,
                )
        self.EnableVoice = channel.unary_unary(
                '/services.omnichannel.asm.v1alpha1.AsmService/EnableVoice',
                request_serializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.EnableVoiceRequest.SerializeToString,
                response_deserializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.EnableVoiceResponse.FromString,
                )
        self.DisableVoice = channel.unary_unary(
                '/services.omnichannel.asm.v1alpha1.AsmService/DisableVoice',
                request_serializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.DisableVoiceRequest.SerializeToString,
                response_deserializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.DisableVoiceResponse.FromString,
                )
        self.ListAsmUserDetails = channel.unary_unary(
                '/services.omnichannel.asm.v1alpha1.AsmService/ListAsmUserDetails',
                request_serializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.ListAsmUserDetailsRequest.SerializeToString,
                response_deserializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.ListAsmUserDetailsResponse.FromString,
                )
        self.PushEvents = channel.unary_unary(
                '/services.omnichannel.asm.v1alpha1.AsmService/PushEvents',
                request_serializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.PushEventsRequest.SerializeToString,
                response_deserializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.PushEventResponse.FromString,
                )


class AsmServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateSession(self, request, context):
        """Creates an agent session and enables the voice channel
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndSession(self, request, context):
        """Closes an asm session and all sub sessions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentSession(self, request, context):
        """Gets an agent's current asm session
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnableVoice(self, request, context):
        """Updates the currently active subsession
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisableVoice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAsmUserDetails(self, request, context):
        """List all Sessions for the given user. Contains statistical enrichments for each agent and their conversations.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushEvents(self, request, context):
        """puah events push a list of events
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AsmServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateSession': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSession,
                    request_deserializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.CreateSessionRequest.FromString,
                    response_serializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.CreateSessionResponse.SerializeToString,
            ),
            'EndSession': grpc.unary_unary_rpc_method_handler(
                    servicer.EndSession,
                    request_deserializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.EndSessionRequest.FromString,
                    response_serializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.EndSessionResponse.SerializeToString,
            ),
            'GetCurrentSession': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentSession,
                    request_deserializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.GetCurrentSessionRequest.FromString,
                    response_serializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.GetCurrentSessionResponse.SerializeToString,
            ),
            'EnableVoice': grpc.unary_unary_rpc_method_handler(
                    servicer.EnableVoice,
                    request_deserializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.EnableVoiceRequest.FromString,
                    response_serializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.EnableVoiceResponse.SerializeToString,
            ),
            'DisableVoice': grpc.unary_unary_rpc_method_handler(
                    servicer.DisableVoice,
                    request_deserializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.DisableVoiceRequest.FromString,
                    response_serializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.DisableVoiceResponse.SerializeToString,
            ),
            'ListAsmUserDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAsmUserDetails,
                    request_deserializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.ListAsmUserDetailsRequest.FromString,
                    response_serializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.ListAsmUserDetailsResponse.SerializeToString,
            ),
            'PushEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.PushEvents,
                    request_deserializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.PushEventsRequest.FromString,
                    response_serializer=services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.PushEventResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'services.omnichannel.asm.v1alpha1.AsmService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AsmService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/services.omnichannel.asm.v1alpha1.AsmService/CreateSession',
            services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.CreateSessionRequest.SerializeToString,
            services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.CreateSessionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EndSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/services.omnichannel.asm.v1alpha1.AsmService/EndSession',
            services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.EndSessionRequest.SerializeToString,
            services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.EndSessionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCurrentSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/services.omnichannel.asm.v1alpha1.AsmService/GetCurrentSession',
            services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.GetCurrentSessionRequest.SerializeToString,
            services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.GetCurrentSessionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EnableVoice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/services.omnichannel.asm.v1alpha1.AsmService/EnableVoice',
            services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.EnableVoiceRequest.SerializeToString,
            services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.EnableVoiceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisableVoice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/services.omnichannel.asm.v1alpha1.AsmService/DisableVoice',
            services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.DisableVoiceRequest.SerializeToString,
            services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.DisableVoiceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAsmUserDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/services.omnichannel.asm.v1alpha1.AsmService/ListAsmUserDetails',
            services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.ListAsmUserDetailsRequest.SerializeToString,
            services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.ListAsmUserDetailsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/services.omnichannel.asm.v1alpha1.AsmService/PushEvents',
            services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.PushEventsRequest.SerializeToString,
            services_dot_omnichannel_dot_asm_dot_v1alpha1_dot_entities__pb2.PushEventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
