# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from api.v1alpha1.agenttraining import learning_opportunity_pb2 as api_dot_v1alpha1_dot_agenttraining_dot_learning__opportunity__pb2


class AgentTrainingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateLearningOpportunity = channel.unary_unary(
                '/api.v1alpha1.agenttraining.AgentTrainingService/CreateLearningOpportunity',
                request_serializer=api_dot_v1alpha1_dot_agenttraining_dot_learning__opportunity__pb2.CreateLearningOpportunityRequest.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_agenttraining_dot_learning__opportunity__pb2.CreateLearningOpportunityResponse.FromString,
                )
        self.ListLearningOpportunities = channel.unary_unary(
                '/api.v1alpha1.agenttraining.AgentTrainingService/ListLearningOpportunities',
                request_serializer=api_dot_v1alpha1_dot_agenttraining_dot_learning__opportunity__pb2.ListLearningOpportunitiesRequest.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_agenttraining_dot_learning__opportunity__pb2.ListLearningOpportunitiesResponse.FromString,
                )


class AgentTrainingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateLearningOpportunity(self, request, context):
        """CreateLearningOpportunity creates a new learning opportunity.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLearningOpportunities(self, request, context):
        """ListLearningOpportunities lists learning opportunities.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AgentTrainingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateLearningOpportunity': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateLearningOpportunity,
                    request_deserializer=api_dot_v1alpha1_dot_agenttraining_dot_learning__opportunity__pb2.CreateLearningOpportunityRequest.FromString,
                    response_serializer=api_dot_v1alpha1_dot_agenttraining_dot_learning__opportunity__pb2.CreateLearningOpportunityResponse.SerializeToString,
            ),
            'ListLearningOpportunities': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLearningOpportunities,
                    request_deserializer=api_dot_v1alpha1_dot_agenttraining_dot_learning__opportunity__pb2.ListLearningOpportunitiesRequest.FromString,
                    response_serializer=api_dot_v1alpha1_dot_agenttraining_dot_learning__opportunity__pb2.ListLearningOpportunitiesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.v1alpha1.agenttraining.AgentTrainingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AgentTrainingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateLearningOpportunity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.agenttraining.AgentTrainingService/CreateLearningOpportunity',
            api_dot_v1alpha1_dot_agenttraining_dot_learning__opportunity__pb2.CreateLearningOpportunityRequest.SerializeToString,
            api_dot_v1alpha1_dot_agenttraining_dot_learning__opportunity__pb2.CreateLearningOpportunityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLearningOpportunities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.agenttraining.AgentTrainingService/ListLearningOpportunities',
            api_dot_v1alpha1_dot_agenttraining_dot_learning__opportunity__pb2.ListLearningOpportunitiesRequest.SerializeToString,
            api_dot_v1alpha1_dot_agenttraining_dot_learning__opportunity__pb2.ListLearningOpportunitiesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
