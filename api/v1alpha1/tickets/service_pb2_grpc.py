# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from api.v1alpha1.tickets import project_pb2 as api_dot_v1alpha1_dot_tickets_dot_project__pb2
from api.v1alpha1.tickets import ticket_pb2 as api_dot_v1alpha1_dot_tickets_dot_ticket__pb2


class TicketsStub(object):
    """Tickets service is the public api for the tickets service., for public integrations to manage tickets / customer service requests. Can be used by any authorized frontend-app.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateTicket = channel.unary_unary(
                '/api.v1alpha1.tickets.Tickets/CreateTicket',
                request_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateTicketReq.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateTicketRes.FromString,
                )
        self.EditTicket = channel.unary_unary(
                '/api.v1alpha1.tickets.Tickets/EditTicket',
                request_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.EditTicketReq.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.EditTicketRes.FromString,
                )
        self.ListTickets = channel.unary_unary(
                '/api.v1alpha1.tickets.Tickets/ListTickets',
                request_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListTicketsReq.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListTicketsRes.FromString,
                )
        self.AssignTicket = channel.unary_unary(
                '/api.v1alpha1.tickets.Tickets/AssignTicket',
                request_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.AssignTicketReq.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.AssignTicketRes.FromString,
                )
        self.CloseTicket = channel.unary_unary(
                '/api.v1alpha1.tickets.Tickets/CloseTicket',
                request_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CloseTicketReq.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CloseTicketRes.FromString,
                )
        self.ViewTicket = channel.unary_unary(
                '/api.v1alpha1.tickets.Tickets/ViewTicket',
                request_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ViewTicketReq.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ViewTicketRes.FromString,
                )
        self.CreateComment = channel.unary_unary(
                '/api.v1alpha1.tickets.Tickets/CreateComment',
                request_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateCommentReq.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateCommentRes.FromString,
                )
        self.EnableProject = channel.unary_unary(
                '/api.v1alpha1.tickets.Tickets/EnableProject',
                request_serializer=api_dot_v1alpha1_dot_tickets_dot_project__pb2.EnableProjectReq.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_tickets_dot_project__pb2.EnableProjectRes.FromString,
                )
        self.ListEnabledProjects = channel.unary_unary(
                '/api.v1alpha1.tickets.Tickets/ListEnabledProjects',
                request_serializer=api_dot_v1alpha1_dot_tickets_dot_project__pb2.ListEnabledProjectsReq.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_tickets_dot_project__pb2.ListEnabledProjectsRes.FromString,
                )
        self.CreateSLA = channel.unary_unary(
                '/api.v1alpha1.tickets.Tickets/CreateSLA',
                request_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateSlaReq.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateSlaRes.FromString,
                )
        self.ListSLA = channel.unary_unary(
                '/api.v1alpha1.tickets.Tickets/ListSLA',
                request_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListSlaReq.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListSlaRes.FromString,
                )
        self.UpdateSLA = channel.unary_unary(
                '/api.v1alpha1.tickets.Tickets/UpdateSLA',
                request_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.UpdateSlaReq.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.UpdateSlaRes.FromString,
                )
        self.ListSLACondition = channel.unary_unary(
                '/api.v1alpha1.tickets.Tickets/ListSLACondition',
                request_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListSlaConditionReq.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListSlaConditionRes.FromString,
                )
        self.ReplyComment = channel.unary_unary(
                '/api.v1alpha1.tickets.Tickets/ReplyComment',
                request_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ReplyCommentReq.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ReplyCommentRes.FromString,
                )
        self.ListTicketAuditLog = channel.unary_unary(
                '/api.v1alpha1.tickets.Tickets/ListTicketAuditLog',
                request_serializer=api_dot_v1alpha1_dot_tickets_dot_project__pb2.ListTicketAuditLogReq.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_tickets_dot_project__pb2.ListTicketAuditLogRes.FromString,
                )
        self.AssignSelf = channel.unary_unary(
                '/api.v1alpha1.tickets.Tickets/AssignSelf',
                request_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateSelfAssignReq.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateSelfAssignRes.FromString,
                )
        self.EditMaskTicket = channel.unary_unary(
                '/api.v1alpha1.tickets.Tickets/EditMaskTicket',
                request_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.EditMaskTicketReq.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.EditMaskTicketRes.FromString,
                )
        self.ListAllocatedTickets = channel.unary_unary(
                '/api.v1alpha1.tickets.Tickets/ListAllocatedTickets',
                request_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListAllocatedTicketReq.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListAllocatedTicketRes.FromString,
                )
        self.ListAvailableAgentTickets = channel.unary_unary(
                '/api.v1alpha1.tickets.Tickets/ListAvailableAgentTickets',
                request_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListAvailableAgentTicketsRequest.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListAvailableAgentTicketsResponse.FromString,
                )
        self.ListSkills = channel.unary_unary(
                '/api.v1alpha1.tickets.Tickets/ListSkills',
                request_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListSkillsRequest.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListSkillsResponse.FromString,
                )
        self.ListUsers = channel.unary_unary(
                '/api.v1alpha1.tickets.Tickets/ListUsers',
                request_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListUsersRequest.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListUsersResponse.FromString,
                )


class TicketsServicer(object):
    """Tickets service is the public api for the tickets service., for public integrations to manage tickets / customer service requests. Can be used by any authorized frontend-app.
    """

    def CreateTicket(self, request, context):
        """Public Method to create a ticket.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditTicket(self, request, context):
        """Public Method to edit a ticket.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTickets(self, request, context):
        """Public method to list tickets
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssignTicket(self, request, context):
        """Public method to assign ticket
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseTicket(self, request, context):
        """Public Method to Close a ticket
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewTicket(self, request, context):
        """Public method to view ticket
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateComment(self, request, context):
        """Public Method to create a Comment.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnableProject(self, request, context):
        """Public method to Enable Project for Ticketing system
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListEnabledProjects(self, request, context):
        """rpc EditComment (EditCommentReq) returns(EditCommentRes) {
        option (google.api.http).post = "/api/v1alpha1/tickets/tickets/editcomment";
        option (google.api.http).body = "*";
        option (annotations.authz) = {
        sets: [{permissions: [PERMISSION_TICKETS_APP]}];
        };
        }

        Public method to List projects enabled for Ticketing system
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSLA(self, request, context):
        """Public Method to create a sla.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSLA(self, request, context):
        """Public method to list sla
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSLA(self, request, context):
        """Public method to update sla
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSLACondition(self, request, context):
        """Public method to list sla_condition
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReplyComment(self, request, context):
        """Public method to list sla_condition
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTicketAuditLog(self, request, context):
        """Public method to List audit log for Ticketing system
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssignSelf(self, request, context):
        """Public method to assign a ticket
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditMaskTicket(self, request, context):
        """Public Method to edit a ticket.
        EditTicket would be deprecated
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAllocatedTickets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAvailableAgentTickets(self, request, context):
        """public method - to return list of available tickets to pick for an Agent
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSkills(self, request, context):
        """public method to fetch list of skills for a tickets user
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUsers(self, request, context):
        """public method to fetch list of users for a tickets user
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TicketsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateTicket': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTicket,
                    request_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateTicketReq.FromString,
                    response_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateTicketRes.SerializeToString,
            ),
            'EditTicket': grpc.unary_unary_rpc_method_handler(
                    servicer.EditTicket,
                    request_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.EditTicketReq.FromString,
                    response_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.EditTicketRes.SerializeToString,
            ),
            'ListTickets': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTickets,
                    request_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListTicketsReq.FromString,
                    response_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListTicketsRes.SerializeToString,
            ),
            'AssignTicket': grpc.unary_unary_rpc_method_handler(
                    servicer.AssignTicket,
                    request_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.AssignTicketReq.FromString,
                    response_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.AssignTicketRes.SerializeToString,
            ),
            'CloseTicket': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseTicket,
                    request_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CloseTicketReq.FromString,
                    response_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CloseTicketRes.SerializeToString,
            ),
            'ViewTicket': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewTicket,
                    request_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ViewTicketReq.FromString,
                    response_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ViewTicketRes.SerializeToString,
            ),
            'CreateComment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateComment,
                    request_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateCommentReq.FromString,
                    response_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateCommentRes.SerializeToString,
            ),
            'EnableProject': grpc.unary_unary_rpc_method_handler(
                    servicer.EnableProject,
                    request_deserializer=api_dot_v1alpha1_dot_tickets_dot_project__pb2.EnableProjectReq.FromString,
                    response_serializer=api_dot_v1alpha1_dot_tickets_dot_project__pb2.EnableProjectRes.SerializeToString,
            ),
            'ListEnabledProjects': grpc.unary_unary_rpc_method_handler(
                    servicer.ListEnabledProjects,
                    request_deserializer=api_dot_v1alpha1_dot_tickets_dot_project__pb2.ListEnabledProjectsReq.FromString,
                    response_serializer=api_dot_v1alpha1_dot_tickets_dot_project__pb2.ListEnabledProjectsRes.SerializeToString,
            ),
            'CreateSLA': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSLA,
                    request_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateSlaReq.FromString,
                    response_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateSlaRes.SerializeToString,
            ),
            'ListSLA': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSLA,
                    request_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListSlaReq.FromString,
                    response_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListSlaRes.SerializeToString,
            ),
            'UpdateSLA': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSLA,
                    request_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.UpdateSlaReq.FromString,
                    response_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.UpdateSlaRes.SerializeToString,
            ),
            'ListSLACondition': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSLACondition,
                    request_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListSlaConditionReq.FromString,
                    response_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListSlaConditionRes.SerializeToString,
            ),
            'ReplyComment': grpc.unary_unary_rpc_method_handler(
                    servicer.ReplyComment,
                    request_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ReplyCommentReq.FromString,
                    response_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ReplyCommentRes.SerializeToString,
            ),
            'ListTicketAuditLog': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTicketAuditLog,
                    request_deserializer=api_dot_v1alpha1_dot_tickets_dot_project__pb2.ListTicketAuditLogReq.FromString,
                    response_serializer=api_dot_v1alpha1_dot_tickets_dot_project__pb2.ListTicketAuditLogRes.SerializeToString,
            ),
            'AssignSelf': grpc.unary_unary_rpc_method_handler(
                    servicer.AssignSelf,
                    request_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateSelfAssignReq.FromString,
                    response_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateSelfAssignRes.SerializeToString,
            ),
            'EditMaskTicket': grpc.unary_unary_rpc_method_handler(
                    servicer.EditMaskTicket,
                    request_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.EditMaskTicketReq.FromString,
                    response_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.EditMaskTicketRes.SerializeToString,
            ),
            'ListAllocatedTickets': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAllocatedTickets,
                    request_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListAllocatedTicketReq.FromString,
                    response_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListAllocatedTicketRes.SerializeToString,
            ),
            'ListAvailableAgentTickets': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAvailableAgentTickets,
                    request_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListAvailableAgentTicketsRequest.FromString,
                    response_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListAvailableAgentTicketsResponse.SerializeToString,
            ),
            'ListSkills': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSkills,
                    request_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListSkillsRequest.FromString,
                    response_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListSkillsResponse.SerializeToString,
            ),
            'ListUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUsers,
                    request_deserializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListUsersRequest.FromString,
                    response_serializer=api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListUsersResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.v1alpha1.tickets.Tickets', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Tickets(object):
    """Tickets service is the public api for the tickets service., for public integrations to manage tickets / customer service requests. Can be used by any authorized frontend-app.
    """

    @staticmethod
    def CreateTicket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.tickets.Tickets/CreateTicket',
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateTicketReq.SerializeToString,
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateTicketRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditTicket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.tickets.Tickets/EditTicket',
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.EditTicketReq.SerializeToString,
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.EditTicketRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTickets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.tickets.Tickets/ListTickets',
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListTicketsReq.SerializeToString,
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListTicketsRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssignTicket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.tickets.Tickets/AssignTicket',
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.AssignTicketReq.SerializeToString,
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.AssignTicketRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseTicket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.tickets.Tickets/CloseTicket',
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CloseTicketReq.SerializeToString,
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CloseTicketRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ViewTicket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.tickets.Tickets/ViewTicket',
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ViewTicketReq.SerializeToString,
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ViewTicketRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateComment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.tickets.Tickets/CreateComment',
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateCommentReq.SerializeToString,
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateCommentRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EnableProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.tickets.Tickets/EnableProject',
            api_dot_v1alpha1_dot_tickets_dot_project__pb2.EnableProjectReq.SerializeToString,
            api_dot_v1alpha1_dot_tickets_dot_project__pb2.EnableProjectRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListEnabledProjects(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.tickets.Tickets/ListEnabledProjects',
            api_dot_v1alpha1_dot_tickets_dot_project__pb2.ListEnabledProjectsReq.SerializeToString,
            api_dot_v1alpha1_dot_tickets_dot_project__pb2.ListEnabledProjectsRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSLA(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.tickets.Tickets/CreateSLA',
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateSlaReq.SerializeToString,
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateSlaRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSLA(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.tickets.Tickets/ListSLA',
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListSlaReq.SerializeToString,
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListSlaRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSLA(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.tickets.Tickets/UpdateSLA',
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.UpdateSlaReq.SerializeToString,
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.UpdateSlaRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSLACondition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.tickets.Tickets/ListSLACondition',
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListSlaConditionReq.SerializeToString,
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListSlaConditionRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReplyComment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.tickets.Tickets/ReplyComment',
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ReplyCommentReq.SerializeToString,
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ReplyCommentRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTicketAuditLog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.tickets.Tickets/ListTicketAuditLog',
            api_dot_v1alpha1_dot_tickets_dot_project__pb2.ListTicketAuditLogReq.SerializeToString,
            api_dot_v1alpha1_dot_tickets_dot_project__pb2.ListTicketAuditLogRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssignSelf(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.tickets.Tickets/AssignSelf',
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateSelfAssignReq.SerializeToString,
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.CreateSelfAssignRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditMaskTicket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.tickets.Tickets/EditMaskTicket',
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.EditMaskTicketReq.SerializeToString,
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.EditMaskTicketRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAllocatedTickets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.tickets.Tickets/ListAllocatedTickets',
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListAllocatedTicketReq.SerializeToString,
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListAllocatedTicketRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAvailableAgentTickets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.tickets.Tickets/ListAvailableAgentTickets',
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListAvailableAgentTicketsRequest.SerializeToString,
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListAvailableAgentTicketsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSkills(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.tickets.Tickets/ListSkills',
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListSkillsRequest.SerializeToString,
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListSkillsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.tickets.Tickets/ListUsers',
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListUsersRequest.SerializeToString,
            api_dot_v1alpha1_dot_tickets_dot_ticket__pb2.ListUsersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
