# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from api.v1alpha1.explorer import service_pb2 as api_dot_v1alpha1_dot_explorer_dot_service__pb2


class ExplorerServiceStub(object):
    """ExplorerService is the service for the explorer API.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListDatasourceSchemas = channel.unary_unary(
                '/api.v1alpha1.explorer.ExplorerService/ListDatasourceSchemas',
                request_serializer=api_dot_v1alpha1_dot_explorer_dot_service__pb2.ListDatasourceSchemasRequest.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_explorer_dot_service__pb2.ListDatasourceSchemasResponse.FromString,
                )
        self.Query = channel.unary_unary(
                '/api.v1alpha1.explorer.ExplorerService/Query',
                request_serializer=api_dot_v1alpha1_dot_explorer_dot_service__pb2.QueryRequest.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_explorer_dot_service__pb2.QueryResponse.FromString,
                )


class ExplorerServiceServicer(object):
    """ExplorerService is the service for the explorer API.
    """

    def ListDatasourceSchemas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Query(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExplorerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListDatasourceSchemas': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDatasourceSchemas,
                    request_deserializer=api_dot_v1alpha1_dot_explorer_dot_service__pb2.ListDatasourceSchemasRequest.FromString,
                    response_serializer=api_dot_v1alpha1_dot_explorer_dot_service__pb2.ListDatasourceSchemasResponse.SerializeToString,
            ),
            'Query': grpc.unary_unary_rpc_method_handler(
                    servicer.Query,
                    request_deserializer=api_dot_v1alpha1_dot_explorer_dot_service__pb2.QueryRequest.FromString,
                    response_serializer=api_dot_v1alpha1_dot_explorer_dot_service__pb2.QueryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.v1alpha1.explorer.ExplorerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ExplorerService(object):
    """ExplorerService is the service for the explorer API.
    """

    @staticmethod
    def ListDatasourceSchemas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.explorer.ExplorerService/ListDatasourceSchemas',
            api_dot_v1alpha1_dot_explorer_dot_service__pb2.ListDatasourceSchemasRequest.SerializeToString,
            api_dot_v1alpha1_dot_explorer_dot_service__pb2.ListDatasourceSchemasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Query(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.explorer.ExplorerService/Query',
            api_dot_v1alpha1_dot_explorer_dot_service__pb2.QueryRequest.SerializeToString,
            api_dot_v1alpha1_dot_explorer_dot_service__pb2.QueryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
