# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from api.v1alpha1.newsroom import entities_pb2 as api_dot_v1alpha1_dot_newsroom_dot_entities__pb2


class NewsroomAPIStub(object):
    """Service for interacting with TCN's Newsroom API system.
    Accessing all of the methods Requestuire an authenticated user with the correct
    permissions.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateNewsArticle = channel.unary_unary(
                '/api.v1alpha1.newsroom.NewsroomAPI/CreateNewsArticle',
                request_serializer=api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.CreateNewsArticleRequest.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.CreateNewsArticleResponse.FromString,
                )
        self.ListNewsArticles = channel.unary_unary(
                '/api.v1alpha1.newsroom.NewsroomAPI/ListNewsArticles',
                request_serializer=api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.ListNewsArticlesRequest.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.ListNewsArticlesResponse.FromString,
                )
        self.GetNewsArticleById = channel.unary_unary(
                '/api.v1alpha1.newsroom.NewsroomAPI/GetNewsArticleById',
                request_serializer=api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.GetNewsArticleByIdRequest.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.GetNewsArticleByIdResponse.FromString,
                )
        self.UpdateNewsArticle = channel.unary_unary(
                '/api.v1alpha1.newsroom.NewsroomAPI/UpdateNewsArticle',
                request_serializer=api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.UpdateNewsArticleRequest.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.UpdateNewsArticleResponse.FromString,
                )


class NewsroomAPIServicer(object):
    """Service for interacting with TCN's Newsroom API system.
    Accessing all of the methods Requestuire an authenticated user with the correct
    permissions.
    """

    def CreateNewsArticle(self, request, context):
        """create news article
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListNewsArticles(self, request, context):
        """list news articles
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNewsArticleById(self, request, context):
        """get news article details by the id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateNewsArticle(self, request, context):
        """update news article
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NewsroomAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateNewsArticle': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNewsArticle,
                    request_deserializer=api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.CreateNewsArticleRequest.FromString,
                    response_serializer=api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.CreateNewsArticleResponse.SerializeToString,
            ),
            'ListNewsArticles': grpc.unary_unary_rpc_method_handler(
                    servicer.ListNewsArticles,
                    request_deserializer=api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.ListNewsArticlesRequest.FromString,
                    response_serializer=api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.ListNewsArticlesResponse.SerializeToString,
            ),
            'GetNewsArticleById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNewsArticleById,
                    request_deserializer=api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.GetNewsArticleByIdRequest.FromString,
                    response_serializer=api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.GetNewsArticleByIdResponse.SerializeToString,
            ),
            'UpdateNewsArticle': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateNewsArticle,
                    request_deserializer=api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.UpdateNewsArticleRequest.FromString,
                    response_serializer=api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.UpdateNewsArticleResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.v1alpha1.newsroom.NewsroomAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NewsroomAPI(object):
    """Service for interacting with TCN's Newsroom API system.
    Accessing all of the methods Requestuire an authenticated user with the correct
    permissions.
    """

    @staticmethod
    def CreateNewsArticle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.newsroom.NewsroomAPI/CreateNewsArticle',
            api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.CreateNewsArticleRequest.SerializeToString,
            api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.CreateNewsArticleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListNewsArticles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.newsroom.NewsroomAPI/ListNewsArticles',
            api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.ListNewsArticlesRequest.SerializeToString,
            api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.ListNewsArticlesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNewsArticleById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.newsroom.NewsroomAPI/GetNewsArticleById',
            api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.GetNewsArticleByIdRequest.SerializeToString,
            api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.GetNewsArticleByIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateNewsArticle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.newsroom.NewsroomAPI/UpdateNewsArticle',
            api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.UpdateNewsArticleRequest.SerializeToString,
            api_dot_v1alpha1_dot_newsroom_dot_entities__pb2.UpdateNewsArticleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
