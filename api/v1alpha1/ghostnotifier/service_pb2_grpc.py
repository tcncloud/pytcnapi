# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from api.commons import ghostnotifier_pb2 as api_dot_commons_dot_ghostnotifier__pb2
from api.v1alpha1.ghostnotifier import service_pb2 as api_dot_v1alpha1_dot_ghostnotifier_dot_service__pb2


class GhostNotifierApiStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListNotifications = channel.unary_stream(
                '/api.v1alpha1.ghostnotifier.GhostNotifierApi/ListNotifications',
                request_serializer=api_dot_v1alpha1_dot_ghostnotifier_dot_service__pb2.ListNotificationsReq.SerializeToString,
                response_deserializer=api_dot_commons_dot_ghostnotifier__pb2.GhostNotification.FromString,
                )


class GhostNotifierApiServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListNotifications(self, request, context):
        """Opens a server side stream that will forward and ghost notifications to the client for the given user
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GhostNotifierApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListNotifications': grpc.unary_stream_rpc_method_handler(
                    servicer.ListNotifications,
                    request_deserializer=api_dot_v1alpha1_dot_ghostnotifier_dot_service__pb2.ListNotificationsReq.FromString,
                    response_serializer=api_dot_commons_dot_ghostnotifier__pb2.GhostNotification.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.v1alpha1.ghostnotifier.GhostNotifierApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GhostNotifierApi(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.v1alpha1.ghostnotifier.GhostNotifierApi/ListNotifications',
            api_dot_v1alpha1_dot_ghostnotifier_dot_service__pb2.ListNotificationsReq.SerializeToString,
            api_dot_commons_dot_ghostnotifier__pb2.GhostNotification.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
