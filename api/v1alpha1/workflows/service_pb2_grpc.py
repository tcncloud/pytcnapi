# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from api.v1alpha1.workflows import service_pb2 as api_dot_v1alpha1_dot_workflows_dot_service__pb2


class WorkflowDefinitionPersistServiceStub(object):
    """WorkflowDefinitionPersistService is the service that provides CRUD operations for workflow definitions.
    PERMISSION_WORKFLOWS is required for all operations
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateWorkflowDefinition = channel.unary_unary(
                '/api.v1alpha1.workflows.WorkflowDefinitionPersistService/CreateWorkflowDefinition',
                request_serializer=api_dot_v1alpha1_dot_workflows_dot_service__pb2.CreateWorkflowDefinitionRequest.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_workflows_dot_service__pb2.CreateWorkflowDefinitionResponse.FromString,
                )
        self.GetWorkflowDefinition = channel.unary_unary(
                '/api.v1alpha1.workflows.WorkflowDefinitionPersistService/GetWorkflowDefinition',
                request_serializer=api_dot_v1alpha1_dot_workflows_dot_service__pb2.GetWorkflowDefinitionRequest.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_workflows_dot_service__pb2.GetWorkflowDefinitionResponse.FromString,
                )
        self.ListWorkflowDefinitions = channel.unary_stream(
                '/api.v1alpha1.workflows.WorkflowDefinitionPersistService/ListWorkflowDefinitions',
                request_serializer=api_dot_v1alpha1_dot_workflows_dot_service__pb2.ListWorkflowDefinitionsRequest.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_workflows_dot_service__pb2.ListWorkflowDefinitionsResponse.FromString,
                )
        self.UpdateWorkflowDefinition = channel.unary_unary(
                '/api.v1alpha1.workflows.WorkflowDefinitionPersistService/UpdateWorkflowDefinition',
                request_serializer=api_dot_v1alpha1_dot_workflows_dot_service__pb2.UpdateWorkflowDefinitionRequest.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_workflows_dot_service__pb2.UpdateWorkflowDefinitionResponse.FromString,
                )
        self.ValidateWorkflowDefinition = channel.unary_unary(
                '/api.v1alpha1.workflows.WorkflowDefinitionPersistService/ValidateWorkflowDefinition',
                request_serializer=api_dot_v1alpha1_dot_workflows_dot_service__pb2.ValidateWorkflowDefinitionRequest.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_workflows_dot_service__pb2.ValidateWorkflowDefinitionResponse.FromString,
                )


class WorkflowDefinitionPersistServiceServicer(object):
    """WorkflowDefinitionPersistService is the service that provides CRUD operations for workflow definitions.
    PERMISSION_WORKFLOWS is required for all operations
    """

    def CreateWorkflowDefinition(self, request, context):
        """CreateWorkflowDefinition creates a new flow definition in the database
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorkflowDefinition(self, request, context):
        """GetWorkflowDefinition retrieves a flow definition from the database
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListWorkflowDefinitions(self, request, context):
        """ListWorkflowDefinitions retrieves a list of flow definitions from the database optionally filtered by the owning application
        if application is not specified, all flow definitions for the org are returned
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateWorkflowDefinition(self, request, context):
        """UpdateWorkflowDefinition updates a flow definition in the database. Only the name, description and definition graph itself are updated
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateWorkflowDefinition(self, request, context):
        """ValidateWorkflowDefinition validates a flow definition in the database. Only the name, description and definition graph itself are updated
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WorkflowDefinitionPersistServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateWorkflowDefinition': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateWorkflowDefinition,
                    request_deserializer=api_dot_v1alpha1_dot_workflows_dot_service__pb2.CreateWorkflowDefinitionRequest.FromString,
                    response_serializer=api_dot_v1alpha1_dot_workflows_dot_service__pb2.CreateWorkflowDefinitionResponse.SerializeToString,
            ),
            'GetWorkflowDefinition': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorkflowDefinition,
                    request_deserializer=api_dot_v1alpha1_dot_workflows_dot_service__pb2.GetWorkflowDefinitionRequest.FromString,
                    response_serializer=api_dot_v1alpha1_dot_workflows_dot_service__pb2.GetWorkflowDefinitionResponse.SerializeToString,
            ),
            'ListWorkflowDefinitions': grpc.unary_stream_rpc_method_handler(
                    servicer.ListWorkflowDefinitions,
                    request_deserializer=api_dot_v1alpha1_dot_workflows_dot_service__pb2.ListWorkflowDefinitionsRequest.FromString,
                    response_serializer=api_dot_v1alpha1_dot_workflows_dot_service__pb2.ListWorkflowDefinitionsResponse.SerializeToString,
            ),
            'UpdateWorkflowDefinition': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateWorkflowDefinition,
                    request_deserializer=api_dot_v1alpha1_dot_workflows_dot_service__pb2.UpdateWorkflowDefinitionRequest.FromString,
                    response_serializer=api_dot_v1alpha1_dot_workflows_dot_service__pb2.UpdateWorkflowDefinitionResponse.SerializeToString,
            ),
            'ValidateWorkflowDefinition': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateWorkflowDefinition,
                    request_deserializer=api_dot_v1alpha1_dot_workflows_dot_service__pb2.ValidateWorkflowDefinitionRequest.FromString,
                    response_serializer=api_dot_v1alpha1_dot_workflows_dot_service__pb2.ValidateWorkflowDefinitionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.v1alpha1.workflows.WorkflowDefinitionPersistService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WorkflowDefinitionPersistService(object):
    """WorkflowDefinitionPersistService is the service that provides CRUD operations for workflow definitions.
    PERMISSION_WORKFLOWS is required for all operations
    """

    @staticmethod
    def CreateWorkflowDefinition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.workflows.WorkflowDefinitionPersistService/CreateWorkflowDefinition',
            api_dot_v1alpha1_dot_workflows_dot_service__pb2.CreateWorkflowDefinitionRequest.SerializeToString,
            api_dot_v1alpha1_dot_workflows_dot_service__pb2.CreateWorkflowDefinitionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWorkflowDefinition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.workflows.WorkflowDefinitionPersistService/GetWorkflowDefinition',
            api_dot_v1alpha1_dot_workflows_dot_service__pb2.GetWorkflowDefinitionRequest.SerializeToString,
            api_dot_v1alpha1_dot_workflows_dot_service__pb2.GetWorkflowDefinitionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListWorkflowDefinitions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.v1alpha1.workflows.WorkflowDefinitionPersistService/ListWorkflowDefinitions',
            api_dot_v1alpha1_dot_workflows_dot_service__pb2.ListWorkflowDefinitionsRequest.SerializeToString,
            api_dot_v1alpha1_dot_workflows_dot_service__pb2.ListWorkflowDefinitionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateWorkflowDefinition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.workflows.WorkflowDefinitionPersistService/UpdateWorkflowDefinition',
            api_dot_v1alpha1_dot_workflows_dot_service__pb2.UpdateWorkflowDefinitionRequest.SerializeToString,
            api_dot_v1alpha1_dot_workflows_dot_service__pb2.UpdateWorkflowDefinitionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidateWorkflowDefinition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.workflows.WorkflowDefinitionPersistService/ValidateWorkflowDefinition',
            api_dot_v1alpha1_dot_workflows_dot_service__pb2.ValidateWorkflowDefinitionRequest.SerializeToString,
            api_dot_v1alpha1_dot_workflows_dot_service__pb2.ValidateWorkflowDefinitionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
