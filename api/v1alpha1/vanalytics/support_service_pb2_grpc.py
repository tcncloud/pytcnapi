# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from api.v1alpha1.vanalytics import flag_transcript_pb2 as api_dot_v1alpha1_dot_vanalytics_dot_flag__transcript__pb2
from api.v1alpha1.vanalytics import transcript_pb2 as api_dot_v1alpha1_dot_vanalytics_dot_transcript__pb2


class VanalyticsSupportStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DeleteFlagTranscript = channel.unary_unary(
                '/api.v1alpha1.vanalytics.VanalyticsSupport/DeleteFlagTranscript',
                request_serializer=api_dot_v1alpha1_dot_vanalytics_dot_flag__transcript__pb2.DeleteFlagTranscriptRequest.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_vanalytics_dot_flag__transcript__pb2.DeleteFlagTranscriptResponse.FromString,
                )
        self.SearchByOrgId = channel.unary_unary(
                '/api.v1alpha1.vanalytics.VanalyticsSupport/SearchByOrgId',
                request_serializer=api_dot_v1alpha1_dot_vanalytics_dot_transcript__pb2.SearchByOrgIdRequest.SerializeToString,
                response_deserializer=api_dot_v1alpha1_dot_vanalytics_dot_transcript__pb2.SearchResponse.FromString,
                )


class VanalyticsSupportServicer(object):
    """Missing associated documentation comment in .proto file."""

    def DeleteFlagTranscript(self, request, context):
        """DeleteFlagTranscript deletes a flag transcript.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchByOrgId(self, request, context):
        """SearchByOrgId searches transcripts for a specific org.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VanalyticsSupportServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DeleteFlagTranscript': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFlagTranscript,
                    request_deserializer=api_dot_v1alpha1_dot_vanalytics_dot_flag__transcript__pb2.DeleteFlagTranscriptRequest.FromString,
                    response_serializer=api_dot_v1alpha1_dot_vanalytics_dot_flag__transcript__pb2.DeleteFlagTranscriptResponse.SerializeToString,
            ),
            'SearchByOrgId': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchByOrgId,
                    request_deserializer=api_dot_v1alpha1_dot_vanalytics_dot_transcript__pb2.SearchByOrgIdRequest.FromString,
                    response_serializer=api_dot_v1alpha1_dot_vanalytics_dot_transcript__pb2.SearchResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.v1alpha1.vanalytics.VanalyticsSupport', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VanalyticsSupport(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def DeleteFlagTranscript(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.vanalytics.VanalyticsSupport/DeleteFlagTranscript',
            api_dot_v1alpha1_dot_vanalytics_dot_flag__transcript__pb2.DeleteFlagTranscriptRequest.SerializeToString,
            api_dot_v1alpha1_dot_vanalytics_dot_flag__transcript__pb2.DeleteFlagTranscriptResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchByOrgId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1alpha1.vanalytics.VanalyticsSupport/SearchByOrgId',
            api_dot_v1alpha1_dot_vanalytics_dot_transcript__pb2.SearchByOrgIdRequest.SerializeToString,
            api_dot_v1alpha1_dot_vanalytics_dot_transcript__pb2.SearchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
